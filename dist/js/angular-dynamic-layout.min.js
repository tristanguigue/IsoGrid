/*
 angular-dynamic-layout 2015-10-06 
*/
!function(){"use strict";angular.module("dynamicLayout",["ngAnimate"])}(),function(){"use strict";function dynamicLayout($window,$timeout,PositionService){function controller($scope,$element){function subscribe(item){items.push(item),layout()}function unsubscribe(item){items.splice(items.indexOf(item),1),layout()}function layout(){$timeout.cancel(timeoutId),timeoutId=$timeout(function(){items.sort(function(a,b){return a.$index<b.$index?-1:a.$index>b.$index?1:0});var lastItem=items[items.length-1];PositionService.layout($element,items),$element[0].style.height=lastItem.pos.y+lastItem.dimensions.height+"px"})}var timeoutId,vm=this,items=[];vm.subscribe=subscribe,vm.unsubscribe=unsubscribe,vm.layout=layout,angular.element($window).on("resize",layout),$scope.$on("$destroy",function(){angular.element($window).off("resize",layout)})}return controller.$inject=["$scope","$element"],{restrict:"A",controller:controller}}angular.module("dynamicLayout").directive("dynamicLayout",dynamicLayout),dynamicLayout.$inject=["$window","$timeout","PositionService"]}(),function(){"use strict";function layoutOnLoad(){function link(scope,element,attrs,ctrl){element.on("load error",function(){ctrl.layout()})}return{restrict:"A",require:"^dynamicLayout",link:link}}angular.module("dynamicLayout").directive("layoutOnLoad",layoutOnLoad)}(),function(){"use strict";function PositionService(){function layout(element,items){angular.forEach(items,function(item){item.calculateDimensions()});var colWidth=getColWidth(items);return angular.forEach(items,function(item){item.dimensions.columnSpan=Math.ceil(item.dimensions.width/colWidth)}),setItemsPosition(element[0].offsetWidth,colWidth,items)}function getColWidth(items){var colWidth;return angular.forEach(items,function(item){(!colWidth||item.dimensions.width<colWidth)&&(colWidth=item.dimensions.width)}),colWidth}function setItemsPosition(containerWidth,colWidth,items){var columns=initColumns(containerWidth,colWidth);angular.forEach(items,function(item){var j,columnHeights=getColumnHeights(columns),colPos=getItemColumnsAndPosition(item,columnHeights,colWidth);for(j in colPos.columns)columns[colPos.columns[j]].push(item);item.pos.x=colPos.position.x,item.pos.y=colPos.position.y})}function initColumns(containerWidth,colWidth){var i,amount=Math.floor(containerWidth/colWidth),columns=[];for(i=0;amount>i;++i)columns.push([]);return columns}function getColumnHeights(columns){var i,columnHeights=[];for(i in columns){var h=0;if(columns[i].length){var lastItem=columns[i][columns[i].length-1];h=lastItem.pos.y+lastItem.dimensions.height}columnHeights.push(h)}return columnHeights}function getItemColumnsAndPosition(item,colHeights,colWidth){if(item.dimensions.columnSpan>colHeights.length)throw"Item too large";var i,indexOfMin=0,minFound=0;for(i=0;i<=colHeights.length-item.dimensions.columnSpan;++i){var startingColumn=i,endingColumn=i+item.dimensions.columnSpan,maxHeightInPart=Math.max.apply(Math,colHeights.slice(startingColumn,endingColumn));(0===i||minFound>maxHeightInPart)&&(minFound=maxHeightInPart,indexOfMin=i)}var itemColumns=[];for(i=indexOfMin;i<indexOfMin+item.dimensions.columnSpan;++i)itemColumns.push(i);var position={x:itemColumns[0]*colWidth,y:minFound};return{columns:itemColumns,position:position}}return{layout:layout}}angular.module("dynamicLayout").factory("PositionService",PositionService)}();